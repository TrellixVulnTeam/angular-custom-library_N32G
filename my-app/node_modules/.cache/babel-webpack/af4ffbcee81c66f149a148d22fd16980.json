{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule } from '@angular/core';\n\nclass MyLibService {\n  constructor() {}\n\n}\n\nMyLibService.ɵfac = function MyLibService_Factory(t) {\n  return new (t || MyLibService)();\n};\n\nMyLibService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MyLibService,\n  factory: MyLibService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MyLibService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass MyLibComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nMyLibComponent.ɵfac = function MyLibComponent_Factory(t) {\n  return new (t || MyLibComponent)();\n};\n\nMyLibComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MyLibComponent,\n  selectors: [[\"lib-my-lib\"]],\n  decls: 2,\n  vars: 0,\n  template: function MyLibComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" my-lib works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MyLibComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-my-lib',\n      template: `\n    <p>\n      my-lib works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\n\nclass MyLibModule {}\n\nMyLibModule.ɵfac = function MyLibModule_Factory(t) {\n  return new (t || MyLibModule)();\n};\n\nMyLibModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MyLibModule\n});\nMyLibModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MyLibModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [MyLibComponent],\n      imports: [],\n      exports: [MyLibComponent]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of my-lib\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { MyLibComponent, MyLibModule, MyLibService };","map":{"version":3,"sources":["/workspace/angular-custom-library/my-lib/projects/my-lib/src/lib/my-lib.service.ts","/workspace/angular-custom-library/my-lib/projects/my-lib/src/lib/my-lib.component.ts","/workspace/angular-custom-library/my-lib/projects/my-lib/src/lib/my-lib.module.ts","/workspace/angular-custom-library/my-lib/projects/my-lib/src/public-api.ts"],"names":[],"mappings":";;;MAKa,Y,CAAY;AAEvB,EAAA,WAAA,GAAA,CAAiB;;AAFM;;;mBAAZ,Y;;;;SAAA,Y;WAAA,Y;cAFC;;;;0EAED,Y,EAAY,CAAA;UAHxB,UAGwB;WAHb;AACV,MAAA,UAAU,EAAE;AADF,K;AAGa,GAAA,C;;;;;MCOZ,c,CAAc;AAEzB,EAAA,WAAA,GAAA,CAAiB;;AAEjB,EAAA,QAAQ,GAAA,CACP;;AALwB;;;mBAAd,c;;;;QARD,c;;;;;;;;;;;;;;;0EAQC,c,EAAc,CAAA;UAV1B,SAU0B;WAVhB;AACT,MAAA,QAAQ,EAAE,YADD;AAET,MAAA,QAAQ,EAAE;;;;AAIT,GANQ;AAOT,MAAA,MAAM,EAAE;AAPC,K;AAUgB,GAAA,C;;;;;MCGd,W,CAAW;;;mBAAX,W;;;;QART;;YAQS,I;YANF,E;;;;0EAME,W,EAAW,CAAA;UAVvB,QAUuB;WAVd;AACR,MAAA,YAAY,EAAE,CACZ,cADY,CADN;AAIR,MAAA,OAAO,EAAE,EAJD;AAMR,MAAA,OAAO,EAAE,CACP,cADO;AAND,K;AAUc,GAAA,C;;ACfxB;;;;AAAA","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MyLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-my-lib',\n  template: `\n    <p>\n      my-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class MyLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { MyLibComponent } from './my-lib.component';\n\n\n\n@NgModule({\n  declarations: [\n    MyLibComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    MyLibComponent\n  ]\n})\nexport class MyLibModule { }\n","/*\n * Public API Surface of my-lib\n */\n\nexport * from './lib/my-lib.service';\nexport * from './lib/my-lib.component';\nexport * from './lib/my-lib.module';\n"]},"metadata":{},"sourceType":"module"}